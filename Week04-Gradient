// Author @patriciogv - 2015
// Week04 HW
// Edited by: Aimee Chen

#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;

float circle(in vec2 _st, in float _radius){
    vec2 l = _st-vec2(0.5);
    return 1.-smoothstep(_radius-(_radius*0.01),
                         _radius+(_radius*0.01),
                         dot(l,l)*3.0);
}

void main() {
	vec2 st = gl_FragCoord.xy/u_resolution;
    vec3 color = vec3(0.0);
	vec3 colorA = vec3(0.005, 0.005,0.574); // determined colors
    vec3 colorB = vec3(u_mouse.y * 0.005,u_mouse.x * 0.005,0.637); // color is interactive with mouse position
    
    st *= 5.;      // Scale up the space by 5
    st = fract(st); // Wrap around 1.0

    // have 25 spaces that go from 0-1

    color = mix(colorA,colorB,vec3(st,0.5));
    //color = mix(colorA,colorB,vec3(circle(st,0.5)));

	gl_FragColor = vec4(color,1.0);
}

/*
original code from author
// Author @patriciogv - 2015

#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform float u_time;

float circle(in vec2 _st, in float _radius){
    vec2 l = _st-vec2(0.5);
    return 1.-smoothstep(_radius-(_radius*0.01),
                         _radius+(_radius*0.01),
                         dot(l,l)*4.0);
}

void main() {
	vec2 st = gl_FragCoord.xy/u_resolution;
    vec3 color = vec3(0.0);

    st *= 3.0;      // Scale up the space by 3
    st = fract(st); // Wrap around 1.0

    color = vec3(st,0.0);
    //color = vec3(circle(st,0.5));

	gl_FragColor = vec4(color,1.0);
}
*/
